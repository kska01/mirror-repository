services:
  db:
    container_name: db-container
    image: mysql:8.0
    volumes:
      - db-volume:/var/lib/mysql
    networks:
      - db-network
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
  be:
    container_name: be-container
    build:
      context: ./be
      dockerfile: Dockerfile
      # 캐시 저장 경로
      cache_to:
        - type=local,dest=/tmp/.buildx-cache/be,mode=max
        # type : 캐시의 종류
        # src : 캐시를 저장할 경로
        # mode : 캐시의 저장 방식(max : 최대한 많은 캐시 데이터를 저장)
      # 캐시를 불러올 경로
      cache_from:
        - type=local,src=/tmp/.buildx-cache/be
      platforms:
        - linux/amd64
        - linux/arm64
    image: ${DOCKER_USERNAME}/be-image:latest
    networks:
      - db-network
      - be-network
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
  fe:
    container_name: fe-container
    build:
      context: ./fe
      dockerfile: Dockerfile
      cache_to:
        - type=local,dest=/tmp/.buildx-cache/fe,mode=max
        # type : 캐시의 종류
        # src : 캐시를 저장할 경로
        # mode : 캐시의 저장 방식(max : 최대한 많은 캐시 데이터를 저장)
      # 캐시를 불러올 경로
      cache_from:
        - type=local,src=/tmp/.buildx-cache/fe
      args:
        - VITE_DOMAIN=${VITE_DOMAIN}
      platforms:
        - linux/amd64
        - linux/arm64
    image: ${DOCKER_USERNAME}/fe-image:latest
    ports:
      - "80:80"
      - "443:443"
    networks:
      - be-network
    volumes:
      - /etc/letsencrypt/live/${DOMAIN}/privkey.pem:/etc/letsencrypt/live/${DOMAIN}/privkey.pem
      - /etc/letsencrypt/live/${DOMAIN}/fullchain.pem:/etc/letsencrypt/live/${DOMAIN}/fullchain.pem
    env_file:
      - .env
    depends_on:
      - db
      - be

volumes:
  db-volume:

networks:
  db-network:
  be-network:
